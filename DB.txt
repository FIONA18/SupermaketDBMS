Customer
CREATE TABLE CUSTOMER(CUS_ID VARCHAR(20),CUS_NAME CHAR(30),CUS_MOB VARCHAR(10),PRIMARY KEY(CUS_ID));

Product
CREATE TABLE PRODUCT(PRO_ID VARCHAR(20),PRO_NAME CHAR(30),PRO_PRICE INT,PRO_QUANTITY INT,STORE_ID VARCHAR(20),PRIMARY KEY(PRO_ID),FOREIGN KEY(STORE_ID)REFERENCES STORE_BRANCH(STORE_ID) ON DELETE CASCADE);

Cashier
CREATE TABLE CASHIER(CASHIER_ID VARCHAR(20),CASHIER_NAME CHAR(30),PRIMARY KEY(CASHIER_ID));

Store branch
CREATE TABLE STORE_BRANCH(STORE_ID VARCHAR(20),STORE_ADDRESS CHAR(30),STORE_PHONE VARCHAR(10),PRIMARY KEY(STORE_ID));

Bill
CREATE TABLE BILL(BILL_NO VARCHAR(20),BILL_COST INT,BILL_DATE DATE,CUS_ID VARCHAR(20),CASHIER_ID VARCHAR(20),PRIMARY KEY(BILL_NO),FOREIGN KEY(CUS_ID) REFERENCES CUSTOMER(CUS_ID)ON DELETE CASCADE,FOREIGN KEY(CASHIER_ID) REFERENCES CASHIER(CASHIER_ID) ON DELETE CASCADE);

Purchases
CREATE TABLE PURCHASES(PRO_ID VARCHAR(20),CUS_ID VARCHAR(20),PRIMARY KEY(PRO_ID,CUS_ID),FOREIGN KEY(PRO_ID)REFERENCES PRODUCT(PRO_ID) ON DELETE CASCADE,FOREIGN KEY(CUS_ID) REFERENCES CUSTOMER(CUS_ID) ON DELETE CASCADE);

Insert Customer Procedure
CREATE OR REPLACE PROCEDURE IN_CUSTOMER(
I IN CUSTOMER.CUS_ID%TYPE,
N IN CUSTOMER.CUS_NAME%TYPE,
M IN CUSTOMER.CUS_MOB%TYPE
)
IS BEGIN
INSERT INTO CUSTOMER("CUS_ID","CUS_NAME","CUS_MOB")VALUES (I,N,M);
END;
/

Delete Customer Procedure
CREATE OR REPLACE PROCEDURE DELETECUS(CUS_ID varchar) AS
BEGIN
DELETE FROM CUSTOMER WHERE CUSTOMER.CUS_ID=DELETECUS.CUS_ID;
END;
/

Invalid Phone Trigger
CREATE OR REPLACE TRIGGER INVALID_PHONE
BEFORE INSERT OR UPDATE OF CUS_MOB ON CUSTOMER FOR EACH ROW
BEGIN
IF LENGTH(:NEW.CUS_MOB)>10 OR LENGTH(:NEW.CUS_MOB)<10
THEN RAISE_APPLICATION_ERROR(-20000,'INVALID MOBILE NUMBER');
END IF;
END;
/

Restricted Bill Trigger
CREATE OR REPLACE TRIGGER RESTRICTED_BILL
BEFORE INSERT OR UPDATE ON BILL 
BEGIN 
IF(TO_CHAR(SYSDATE, 'HH24:MI') NOT BETWEEN '08:00' AND '20:00') THEN
RAISE_APPLICATION_ERROR(-20124,'YOU CAN ONLY GENERATE BILL BETWEEN 8:00 AND 20:00');
END IF;
END;
/

Product Quantity Trigger
CREATE OR REPLACE TRIGGER PRO_UPDATE
BEFORE INSERT OR UPDATE OF PRO_QUANTITY ON PRODUCT FOR EACH ROW
BEGIN 
IF(:NEW.PRO_QUANTITY) > 150 OR (:NEW.PRO_QUANTITY) < 1 THEN
RAISE_APPLICATION_ERROR(-20000,'THE PRODUCT QUANTITY MUST BE BETWEEN 1 AND 100');
END IF;
END;
/
